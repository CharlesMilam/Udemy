setwd("~/git/udemy/ml-a-z/Polynomial_Regression")
dataset = read.csv('Position_Salaries.csv')
View(dataset)
dataset = dataset[2:3]
lin_regr = lm(formula = Salary ~ ., data = dataset)
summary()
summary(lin_regr)
dataset$Level2 = dataset$Level ^ 2
dataset$Level2 = dataset$Level ^ 2
dataset$Level3 = dataset$Level ^ 3
poly_regr = lm(formula = Salary ~ ., data = dataset)
summary(poly_regr)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_regr, newdata = dataset)), color = 'blue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_regr, newdata = dataset)), color = 'blue') +
geom_line(aes(x = datase$Level3, y = predict(poy_regr, newdata = dataset)), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_regr, newdata = dataset)), color = 'blue') +
geom_line(aes(x = dataset$Level3, y = predict(poy_regr, newdata = dataset)), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_regr, newdata = dataset)), color = 'blue') +
geom_line(aes(x = dataset$Level, y = predict(poly_regr, newdata = dataset)), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
dataset$Level4 = dataset$Level ^ 4
poly_regr = lm(formula = Salary ~ ., data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_regr, newdata = dataset)), color = 'blue') +
geom_line(aes(x = dataset$Level, y = predict(poly_regr, newdata = dataset)), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
summary(poly_regr)
new_pred = predict(lin_regr, data.frame(Level = 6.5))
new_poly_pred = predict(poly_regr, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/git/udemy/ml-a-z/SVR")
install.packages("e1071")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(e1071)
regr = svm(formula = Salary ~ ., data=dataset, type='eps-regression')
new_pred = predict(regr, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regr, newdata = data.frame(Level = x_grid))), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
setwd("~/git/udemy/ml-a-z/Decision_Tree_Regression")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(rpart)
regr = rpart(formula=Salary ~ ., data=dataset)
new_pred = predict(regr, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regr, newdata = data.frame(Level = x_grid))), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
regr = rpart(formula=Salary ~ .,
data=dataset,
control=rpart.control(minsplit = 1))
new_pred = predict(regr, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regr, newdata = data.frame(Level = x_grid))), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regr, newdata = data.frame(Level = x_grid))), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
setwd("~/git/udemy/ml-a-z/Random_Forest_Regression")
install.packages("randomForest")
library(randomForest)
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(randomForest)
set.seed(1234)
regr = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 10)
new_pred = predict(regr, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regr, newdata = data.frame(Level = x_grid))), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
regr = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 100)
new_pred = predict(regr, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regr, newdata = data.frame(Level = x_grid))), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
regr = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 500)
new_pred = predict(regr, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color = 'red') +
geom_line(aes(x = x_grid, y = predict(regr, newdata = data.frame(Level = x_grid))), color = 'steelblue') +
ggtitle('Truth or Bluff') +
xlab('Level') +
ylab('Salary')
